Deploying a Django Application to Elastic Beanstalk
https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create-deploy-python-django.html

1 EB CLI Installation
- Install the EB CLI
https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/eb-cli3-install-advanced.html
~$ pipenv install awsebcli --dev  # Not vertual environment!!

- Create an empty (no environments) EB application through CLI
https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/eb-cli3-configuration.html
~$ eb init
Logs
    PS C:\Users\jpins\Dev\Dev.projects\django\clone-airbnb> eb --version
    EB CLI 3.16.0 (Python 3.7.5)
    PS C:\Users\jpins\Dev\Dev.projects\django\clone-airbnb> eb init

    Select a default region
    1) us-east-1 : US East (N. Virginia)
    2) us-west-1 : US West (N. California)
    3) us-west-2 : US West (Oregon)
    ...
    15) ca-central-1 : Canada (Central)
    ...
    (default is 3): 15
    You have not yet set up your credentials or your credentials are incorrect
    You must provide your credentials.  # check - Create User by using IAM (Identity and Access Management)
    (aws-access-id): AKIAQ3SCMVHJHFAHVLVC
    (aws-secret-key): PeBhewpFkJPoesmDY9Snc8jTYHVmZakdL+053CJg

    Select an application to use
    1) demo-javaweb
    2) [ Create new Application ]
    (default is 2): 2

    Enter Application Name
    (default is "clone-airbnb"): airbnb-clone
    Application airbnb-clone has been created.

    It appears you are using Python. Is this correct?
    (Y/n): y

    Select a platform version.
    1) Python 3.6
    2) Python 3.4
    3) Python 3.4 (Preconfigured - Docker)
    4) Python 2.7
    5) Python
    (default is 1): 1
    Do you wish to continue with CodeCommit? (y/N) (default is n): n
    Do you want to set up SSH for your instances?
    (Y/n): n  # You should choose Y here if you want to access EB server through SSH!!!

- Create User by using IAM (Identity and Access Management)
https://console.aws.amazon.com/iam/home?#/home
> Users > Add User
    step-1 
    > User name
    > Access type > Choose Programmatic access
    step-2
    > Permission > Choose Attach existing policies directly > Choose AdministratorAccess (Provides full access to AWS services and resources.)
    You don't need to provide full access but we choose this because we are lazy...
    step-3 Tags 
    > Next
    step-4 Review 
    > Next
    step-5 Create user
    Be carefull!! If you close the page, You will never see the secret access key again!


2. Environments
2.1 Create & deploy EB environments
https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create-deploy-python-django.html
- Django configuration
step-1. create .ebextensions folder on the project root
step-2. create django.config file in .ebextensions
step-3. add project WSGI path into django.config # We use WSGI instead of "python manage.py runserver" for production.
option_settings:
  aws:elasticbeanstalk:container:python:
    WSGIPath: config/wsgi.py

- Create an environment and deploy your application to it with "eb create"
~$ eb create airbnb-clone-env
# creating two environments is recommended ((Blue-Green Deployment: one for testing, another for production)
https://octopus.com/docs/deployment-patterns/blue-green-deployments

log
    PS C:\Users\jpins\Dev\Dev.projects\django\clone-airbnb> eb create airbnb-clone-env
    Creating application version archive "app-54c9-191212_160117".
    Uploading airbnb-clone/app-54c9-191212_160117.zip to S3. This may take a while.
    Upload Complete.
    Environment details for: airbnb-clone-env
    Application name: airbnb-clone
    Region: ca-central-1
    Deployed Version: app-54c9-191212_160117
    Environment ID: e-mhq6eny3zf
    Platform: arn:aws:elasticbeanstalk:ca-central-1::platform/Python 3.6 running on 64bit Amazon Linux/2.9.4
    Tier: WebServer-Standard-1.0
    CNAME: UNKNOWN
    Updated: 2019-12-12 21:01:20.742000+00:00
    Printing Status:
    2019-12-12 21:01:19    INFO    createEnvironment is starting.
    2019-12-12 21:01:20    INFO    Using elasticbeanstalk-ca-central-1-059195042258 as Amazon S3 storage bucket for environment data.
    2019-12-12 21:01:40    INFO    Created security group named: sg-013486ae0d79d5a61
    2019-12-12 21:01:40    INFO    Created load balancer named: awseb-e-m-AWSEBLoa-17QLUIJ0LRJEI
    2019-12-12 21:01:41    INFO    Created security group named: awseb-e-mhq6eny3zf-stack-AWSEBSecurityGroup-15WI1WK38KDPA        
    2019-12-12 21:01:56    INFO    Created Auto Scaling launch configuration named: awseb-e-mhq6eny3zf-stack-AWSEBAutoScalingLaunchConfiguration-U8MPCUUSL0O5
    2019-12-12 21:02:43    INFO    Created Auto Scaling group named: awseb-e-mhq6eny3zf-stack-AWSEBAutoScalingGroup-10D4K7S39P7KZ 
    2019-12-12 21:02:43    INFO    Waiting for EC2 instances to launch. This may take a few minutes.
    2019-12-12 21:02:43    INFO    Created Auto Scaling group policy named: arn:aws:autoscaling:ca-central-1:059195042258:scalingPolicy:6cfb0a76-2530-482f-8764-8860cac51f5c:autoScalingGroupName/awseb-e-mhq6eny3zf-stack-AWSEBAutoScalingGroup-10D4K7S39P7KZ:policyName/awseb-e-mhq6eny3zf-stack-AWSEBAutoScalingScaleDownPolicy-1K3P8MBN1LAEL
    2019-12-12 21:02:43    INFO    Created Auto Scaling group policy named: arn:aws:autoscaling:ca-central-1:059195042258:scalingPolicy:2d3ea56e-5263-479c-8ba4-f99b299cce29:autoScalingGroupName/awseb-e-mhq6eny3zf-stack-AWSEBAutoScalingGroup-10D4K7S39P7KZ:policyName/awseb-e-mhq6eny3zf-stack-AWSEBAutoScalingScaleUpPolicy-EFAY9GCZF6OE
    2019-12-12 21:02:58    INFO    Created CloudWatch alarm named: awseb-e-mhq6eny3zf-stack-AWSEBCloudwatchAlarmLow-GDBFVLDLS9NP  
    2019-12-12 21:02:58    INFO    Created CloudWatch alarm named: awseb-e-mhq6eny3zf-stack-AWSEBCloudwatchAlarmHigh-6X5U2N7TAHFF 
    2019-12-12 21:03:34    ERROR   Your WSGIPath refers to a file that does not exist.
    2019-12-12 21:03:49    INFO    Application available at airbnb-clone-env.jgm92px4xm.ca-central-1.elasticbeanstalk.com.        
    2019-12-12 21:03:50    INFO    Successfully launched environment: airbnb-clone-env

ERROR   Your WSGIPath refers to a file that does not exist.
EB takes files that are committed on its git.
So, EB failed to find WSGIPath becuase .ebextensions/django.config file wasn't committed yet into git repository.

HTTP 404 error here

SOLUTION
whenever you make changes and want to deploy it,
first, git commit 
then, eb deploy

HTTP 500 here

- check Logs
~$ eb Logs
Retrieving logs...
============= i-08d24f8e8cdc9c57d ==============
-------------------------------------
/var/log/httpd/error_log
...
[Thu Dec 12 22:14:07.534706 2019] [:error] [pid 4699] [remote 172.31.9.90:2380] ModuleNotFoundError: No module named 'django'

SOLUTION
This is because we didn't django on EB machine yet.

2.2 Intall PIP packages (requirements.txt)
- create requirements.txt
~$ pipenv shell
~$ pip freeze > requirements.txt 
or
~$ pipenv install pipenv-to-requirements --dev
~$ pipenv-to-requirements -f
https://pypi.org/project/pipenv-to-requirements/

Tips. requirements.txt's last line must be an empty line.

- deploy EB again
~$ eb deploy

ERROR (~$eb logs)
-------------------------------------
/var/log/httpd/error_log
-------------------------------------
...
[Thu Dec 12 23:16:45.648027 2019] [:error] [pid 8759] [remote 127.0.0.1:16536]   File "/opt/python/current/app/config/settings.py", line 160, in <module>
[Thu Dec 12 23:16:45.648030 2019] [:error] [pid 8759] [remote 127.0.0.1:16536]     EMAIL_FROM = "noreply@" + os.environ.get("MAILGUN_DOMAIN")
[Thu Dec 12 23:16:45.648045 2019] [:error] [pid 8759] [remote 127.0.0.1:16536] TypeError: must be str, not NoneType

SOLUTION:
# EMAIL_FROM = "noreply@" + os.environ.get("MAILGUN_DOMAIN")
# TODO: adding evironment properties in AWS EB
# This occurs error with "eb deploy". (TypeError: must be str, not NoneType)
# because .env is NOT commited into git repository.
EMAIL_FROM = "noreply@jaeyp.xyz"

ERROR (~$eb logs)
-------------------------------------
/var/log/httpd/error_log
-------------------------------------
...
[Thu Dec 12 23:22:03.793337 2019] [:error] [pid 9197] [remote 127.0.0.1:0]     check_sqlite_version()
[Thu Dec 12 23:22:03.793343 2019] [:error] [pid 9197] [remote 127.0.0.1:0]   File "/opt/python/run/venv/local/lib64/python3.6/site-packages/django/db/backends/sqlite3/base.p line 63, in check_sqlite_version
[Thu Dec 12 23:22:03.793346 2019] [:error] [pid 9197] [remote 127.0.0.1:0]     raise ImproperlyConfigured('SQLite 3.8.3 or later is required (found %s).' % Database.sqlite_vion)

SOLUTION:
This is because SQLite was installed automatically by "python manage.py runserver"
So, there is no SQLite installed in EB

2.3 install Database in RDS server (Blue-Green Deployment)
- create PostgreSQL database in RDS
Creation method: Standard Create
Engine options
    Engine type: Standard CreatePostgreSQL
    Version: PostgreSQL 9.6.15-R1
Templates: Free tier
settings
    DB instance identifier: airbnb-clone
Credentials settings
    Master username: postgres
    Master password: 
    Confirm password: 
leave other options as default.

- install psycopg2 (PostgreSQL adapter for Python)
http://initd.org/psycopg/
add psycopg==2.8.4 in requirements.txt
# It should be added in requirements.txt manually since we didn't use PostgreSQL in development version (we only install psycopg2 in EB server),
# If you run "pipenv-to-requirements -f", "psycopg==2.8.4" would be removed.
# So, you should add it manually again after generating requirements.txt

- configure PostgreSQL
https://docs.djangoproject.com/en/2.2/ref/databases/#postgresql-notes
https://docs.djangoproject.com/en/2.2/ref/settings/#engine
config/settings.py
    DATABASES = {
        "default": {
            # RDS info: https://ca-central-1.console.aws.amazon.com/rds/home?region=ca-central-1#database:id=airbnb-clone;is-cluster=false
            "ENGINE": "django.db.backends.postgresql",
            "HOST": os.environ.get("RDS_HOST"),  # Endpoint
            "NAME": os.environ.get("RDS_NAME"),  # DB identifier
            "USER": os.environ.get("RDS_USER"),  # Master username
            "PASSWORD": os.environ.get("RDS_PASSWORD"),
            "PORT": os.environ.get("RDS_PORT"),
        }
    }

- set evironment properties for AWS EB
EB > airbnb-clone_env > Configuration > Software - Modify > Environment properties
https://ca-central-1.console.aws.amazon.com/elasticbeanstalk/home?region=ca-central-1#/environment/configuration?applicationName=airbnb-clone&environmentId=e-mhq6eny3zf
    MAILGUN_USERNAME
    MAILGUN_PASSWORD
    GITHUB_ID
    GITHUB_SECRET
    GOOGLE_ID
    GOOGLE_SECRET
    FACEBOOK_ID
    RDS_HOST
    RDS_NAME
    RDS_USER
    RDS_PASSWORD
    RDS_PORT

- deploy again
~$ git add .; git commit ...
~# eb deploy
log
    Creating application version archive "app-cdc3-191213_020057".
    Uploading airbnb-clone/app-cdc3-191213_020057.zip to S3. This may take a while.
    Upload Complete.
    2019-12-13 07:00:59    INFO    Environment update is starting.
    2019-12-13 07:01:02    INFO    Deploying new version to instance(s).
    2019-12-13 07:01:09    ERROR   Your requirements.txt is invalid. Snapshot your logs for details.
    2019-12-13 07:01:12    ERROR   [Instance: i-08d24f8e8cdc9c57d] Command failed on instance. Return code: 1 Output: (TRUNCATED)...)
    File "/usr/lib64/python2.7/subprocess.py", line 190, in check_call
        raise CalledProcessError(retcode, cmd)
    CalledProcessError: Command '/opt/python/run/venv/bin/pip install -r /opt/python/ondeck/app/requirements.txt' returned non-zero exit status 1.
    Hook /opt/elasticbeanstalk/hooks/appdeploy/pre/03deploy.py failed. For more detail, check /var/log/eb-activity.log using console or EB CLI.
    2019-12-13 07:01:12    INFO    Command execution completed on all instances. Summary: [Successful: 0, Failed: 1].
    2019-12-13 07:01:12    ERROR   Unsuccessful command execution on instance id(s) 'i-08d24f8e8cdc9c57d'. Aborting the operation.
    2019-12-13 07:01:13    ERROR   Failed to deploy application.

    ERROR: ServiceError - Failed to deploy application.

~$ eb logs
log
    ...
    Collecting psycopg2==2.8.4 (from -r /opt/python/ondeck/app/requirements.txt (line 41))
    Using cached https://files.pythonhosted.org/packages/84/d7/6a93c99b5ba4d4d22daa3928b983cec66df4536ca50b22ce5dcac65e4e71/psycopg2-2.8.4.tar.gz
      Complete output from command python setup.py egg_info:
      running egg_info
      creating pip-egg-info/psycopg2.egg-info
      writing pip-egg-info/psycopg2.egg-info/PKG-INFO
      writing dependency_links to pip-egg-info/psycopg2.egg-info/dependency_links.txt
      writing top-level names to pip-egg-info/psycopg2.egg-info/top_level.txt
      writing manifest file 'pip-egg-info/psycopg2.egg-info/SOURCES.txt'

      Error: pg_config executable not found.  # we need to tell EB that we need to download PostgreSQL
    
SOLUTION:
https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/customize-containers-ec2.html
create .ebextensions/packages.config
packages:
    yum:
        postgresql96-devel: []


2.4 Set Security Group for RDS 
here, you will see no errors with log file.
but if you try access url (http://airbnb-clone-env.jgm92px4xm.ca-central-1.elasticbeanstalk.com/)
you will see connection hung up (freezing with loading)
This is because Django can NOT connect to RDS since it's not in the same Security Group with EC2 and EB.

- Add EB security group into INBOUND list of default RDS security group
https://ca-central-1.console.aws.amazon.com/rds/home?region=ca-central-1#database:id=airbnb-clone;is-cluster=false
# check image Set security group 01 - 02

- Debugging HTTP error with yellow page
then, you will see the page with Bad Request (400) error
If DEBUG is TRUE, you will see the yellow page with many server infomation.
So, you can force to set DEBUG TRUE on debugging purpose having more information in yellow page with HTTP error. 
config/settings.py
    ...
    # DEBUG = bool(os.environ.get("DEBUG"))
    DEBUG = True  # To debug having more information in yellow page with HTTP error
    ...
    # if DEBUG:  # for Development
    if DEBUG is False: # To debug having more information in yellow page with HTTP error
        DATABASES = {"default": {"ENGINE": "django.db.backends.sqlite3", "NAME": os.path.join(BASE_DIR, "db.sqlite3")}}
    else:  # for AWS EB
        DATABASES = {
            "default": {
                # RDS info: https://ca-central-1.console.aws.amazon.com/rds/home?region=ca-central-1#database:id=airbnb-clone;is-cluster=false
                "ENGINE": "django.db.backends.postgresql",
                "HOST": os.environ.get("RDS_HOST"),  # Endpoint
                "NAME": os.environ.get("RDS_NAME"),  # DB identifier
                "USER": os.environ.get("RDS_USER"),  # Master username
                "PASSWORD": os.environ.get("RDS_PASSWORD"),
                "PORT": os.environ.get("RDS_PORT"),
            }
        }

- Edit config/settings.py
1. ALLOWED_HOSTS
https://docs.djangoproject.com/en/2.2/ref/settings/#allowed-hosts
# ALLOWED_HOSTS = ["localhost", "127.0.0.1", "[::1]", "192.168.2.22"]
ALLOWED_HOSTS = [".elasticbeanstalk.com"]  # add DNS later

2. SECRET_KEY
get strong password or use default SECRET_KEY
https://www.roboform.com/password-generator
move Django SECRET_KEY into EB environment property
# DJANGO_SECRET for production and the second key for dev version
SECRET_KEY = os.environ.get("DJANGO_SECRET", "8^6$fZANh9yX2!tYG27te%DxcQSmXgpJ")

- Rename .ebextensions files since it runs in alphabet order
~$ git mv .\.ebextensions\packages.config .\.ebextensions\01-packages.config
~$ git mv .\.ebextensions\django.config .\.ebextensions\02-django.config
Tips. change VSCODE language mode (bottom right side) to YML (or jinja YAML) from Plain Text

ERROR (yellow page)
ProgrammingError at /
relation "rooms_room" does not exist
LINE 1: SELECT COUNT(*) AS "__count" FROM "rooms_room"

SOLUTION:
This is because we didn't migrate models yet with RDS (PostgreSQL)

2.5 Config Database Migration
Tips.
    You should makemigrations in your local and then push the migrations to production.!!!
    EB use migrations files in git repository for migration!!!
https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create-deploy-python-django.html
check container_commands: in "Add a Database Migration Configuration File" topic
container_commands:
  01_migrate:
    command: "django-admin migrate"
    leader_only: true  # true in the command ensures that it is run only once when you're deploying to multiple instances.

~$ eb deploy (after git commit)
ERROR:
  PS C:\Users\jpins\Dev\Dev.projects\django\clone-airbnb> eb deploy
    Creating application version archive "app-e822-191213_125147".
    Uploading airbnb-clone/app-e822-191213_125147.zip to S3. This may take a while.
    Upload Complete.
    2019-12-13 17:51:49    INFO    Environment update is starting.
    2019-12-13 17:52:11    INFO    Deploying new version to instance(s).
    2019-12-13 17:52:22    ERROR   [Instance: i-08d24f8e8cdc9c57d] Command failed on instance. Return code: 1 Output: (TRUNCATED)...ENVIRONMENT_VARIABLE))
    django.core.exceptions.ImproperlyConfigured: Requested setting DATABASES, but settings are not configured. You must either define the environment variable DJANGO_SETTINGS_MODULE or call settings.configure() before accessing settings.       
    container_command 01_migrate in .ebextensions/02-django.config failed. For more detail, check /var/log/eb-activity.log using console or EB CLI.
    2019-12-13 17:52:22    INFO    Command execution completed on all instances. Summary: [Successful: 0, Failed: 1].       
    2019-12-13 17:52:22    ERROR   Unsuccessful command execution on instance id(s) 'i-08d24f8e8cdc9c57d'. Aborting the operation.
    2019-12-13 17:52:22    ERROR   Failed to deploy application.

    ERROR: ServiceError - Failed to deploy application.

SOLUTION:
add DJANGO_SETTINGS_MODULE in .ebextentions/02-django.config
  aws:elasticbeanstalk:application:environment:
    DJANGO_SETTINGS_MODULE: config.settings  # Be careful, it not ebdjango.settings but config.settings since our settings.py placed in config directory

ERROR:
  PS C:\Users\jpins\Dev\Dev.projects\django\clone-airbnb> eb deploy
    Creating application version archive "app-4634-191213_140624".
    Uploading airbnb-clone/app-4634-191213_140624.zip to S3. This may take a while.
    Upload Complete.
    2019-12-13 19:06:26    INFO    Environment update is starting.
    2019-12-13 19:07:05    INFO    Deploying new version to instance(s).
    2019-12-13 19:07:15    ERROR   [Instance: i-08d24f8e8cdc9c57d] Command failed on instance. Return code: 1 Output: (TRUNaceback) from exc_value
    File "/opt/python/run/venv/local/lib64/python3.6/site-packages/django/db/backends/utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
    django.db.utils.ProgrammingError: relation "users_user" does not exist.
    container_command 01_migrate in .ebextensions/02-django.config failed. For more detail, check /var/log/eb-activity.log  EB CLI.
    2019-12-13 19:07:15    INFO    Command execution completed on all instances. Summary: [Successful: 0, Failed: 1].
    2019-12-13 19:07:15    ERROR   Unsuccessful command execution on instance id(s) 'i-08d24f8e8cdc9c57d'. Aborting the ope
    2019-12-13 19:07:15    ERROR   Failed to deploy application.

    ERROR: ServiceError - Failed to deploy application.

SOLUTION:
You should makemigrations in your local and then push the migrations to production.
Remove below line from .gitignore file
# **/migrations/

2.6 support multi language
- add compilemessages
# this is because django.mo file in locale folder isn't commited into git repository (EB only get django.po)
# So, we need to compile .po file into .mo
ERROR:
    CommandError: Can't find msgfmt. ...

SOLUTION:
https://docs.djangoproject.com/en/2.2/ref/django-admin/#compilemessages
1. add gettext-devel package in .ebextensions/01-packages.config
packages:
    yum:
        ...
        gettext-devel: []
2. add compilemessages in .ebextensions/02-django.config
container_commands:
  ...
  02_compilemessages:
    command: "django-admin compilemessages"


2.7 Support debugging with Sentry
- create a new Django project on sentry.io
https://sentry.io/organizations/nocompany-1h/projects/
- install Sentry
~$ pipenv install sentry-sdk==0.13.5
# ignore pip locking error

- initialize sentry SDK in config/settings.py
import sentry_sdk
from sentry_sdk.integrations.django import DjangoIntegration

# Sentry
if not DEBUG:
    sentry_sdk.init(
        dsn="https://e5ed28e0f48249d9b5d2d67890ee3456@sentry.io/1857012",
        integrations=[DjangoIntegration()]
    )

- create SENTRY_URL on EB property and replace hard-coded dsn
(EB > All Applications > airbnb-clone > airbnb-clone-env > Configuration > Software > Modify)

# Sentry
if not DEBUG:
    sentry_sdk.init(dsn=os.environ.get("SENTRY_URL"), integrations=[DjangoIntegration()])

- add send_default_pii=True option 
https://docs.sentry.io/error-reporting/configuration/?platform=python
If this flag is enabled, certain personally identifiable information is added by active integrations. 
we can check which user has the issue.

# Sentry
if not DEBUG:
    sentry_sdk.init(dsn=os.environ.get("SENTRY_URL"), integrations=[DjangoIntegration()], send_default_pii=True)

- add sentry in requirements.txt
run pipenv-to-requirements -f and add psycopg==2.8.4 again in requirements.txt
or
add sentry-sdk==0.13.5 in requirements.txt manually (don't forget to leave one empty line at the bottom of requirements.txt!!)

- testing
# add below testing code and add a path in urlpatterns
in config/urls.py 
    def trigger_error(request):
        division_by_zero = 1 / 0

    urlpatterns = [
        ...
        path("sentry-debug/", trigger_error),
        ...
    ]
# access sentry-debug url in order to generate division_by_zero error
http://eb.url.for.airbnb-clone-env/sentry-debug/
# Check the issue stream on sentry.io
https://sentry.io/organizations/nocompany-1h/issues/?project=1857012


2.8 Creating Superuser
- create user/management/commands/createsu.py
https://docs.djangoproject.com/en/2.2/topics/auth/customizing/#django.contrib.auth.models.CustomUserManager.create_superuser
- create EB properties for Superuser
# EB properties
SU_USERNAME = "ebadmin"
SU_EMAIL = "jp.inseoul@gmail.com"
SU_PASSWORD = "ebsuper1211!"
- add createsu command in .ebextensions/02-django.config
container_commands:
  ...
  03_createsu:
    command: "django-admin createsu"

ERROR:
~$ eb deploy
2019-12-14 20:07:59    ERROR   [Instance: i-08d24f8e8cdc9c57d] Command failed on instance. Return code: 1 Output: (TRUNCATED)...ate_superuser(settings.SU_USERNAME, settings.SU_EMAIL, settings.SU_PASSWORD)
AttributeError: 'CustomModelManager' object has no attribute 'create_superuser'

SOLUTION:
This is because CustomModelManager inherites models.Manager which doesn't have create_superuser()
Basically, unlike other models, UserManager whiche is a manager for User model inherits BaseUserManager not just models.Manager
    in order to support create_superuser() and others features for User model
So, our CustomModelManager for User model also need to inherits UserManager not models.Manager.
> check class CustomModelManager(models.Manager): in core/managers.py

1. define CustomUserManager in core/managers.py
class CustomUserManager(CustomModelManager, UserManager):
    pass
2. change User manager to CustomUserManager in users/models.py
#  objects = core_managers.CustomModelManager()
objects = core_managers.CustomUserManager()  # Support create_superuser() for EB deployment





==================================================================================================






2. setup WSGI
- first, git commit
- then, eb deploy

3. install Pipfile
~$ pipenv install pipenv-to-requirements
~$ pipenv-to-requirements -f

4. move to Postgresql
https://docs.djangoproject.com/en/2.2/ref/databases/#postgresql-notes

- Install puglins: edit requirements.txt
psyscopg==2.84

- Postgress connection setting
config/settings.py
edit DATABASES by adding ENGINE, USER, NAME, PASSWORD, PORT, HOST 
# We don't edit DATABASES directly in security reason. we used evironment properties (.env) instead.
# but AWS EB can't access .env file since it doesn't place in git repository.
# Instead, we set evironment properties in AWS EB site
add evironment properties in AWS EB


6. store static files into S3 buckets

install django-storeges


django imagemagic (transforming image)


set S3 CacheControl